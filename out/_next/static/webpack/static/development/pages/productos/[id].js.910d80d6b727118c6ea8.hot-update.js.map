{"version":3,"file":"static/webpack/static/development/pages/productos/[id].js.910d80d6b727118c6ea8.hot-update.js","sources":["webpack:///./pages/productos/.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { es } from 'date-fns/locale';\nimport { FirebaseContext } from '../../firebase';\nimport Layout from '../../components/layout/Layout';\nimport Error404 from '../../components/layout/404';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { Campo, InputSubmit } from '../../components/ui/Formulario';\nimport Boton from '../../components/ui/Boton';\n\nconst ContenedorProducto = styled.div`\n   @media (min-width:768px) {\n        display: grid;\n        grid-template-columns: 2fr 1fr;\n        column-gap: 2rem;\n   }\n`;\nconst CreadorProducto = styled.p`\n    padding: .5rem 2rem;\n    background-color: #DA552F;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    display: inline-block;\n    text-align: center;\n`\n\nconst Producto = () => {\n\n    // state del componente\n    const [producto, guardarProducto] = useState({});\n    const [error, guardarError] = useState(false);\n    const [comentario, guardarComentario ] = useState({});\n    const [consultarDB, guardarConsultarDB ] = useState(true);\n\n    // Routing para obtener el id actual\n    const router = useRouter();\n    const { query: { id }} = router;\n\n    // context de firebase\n    const { firebase, usuario } = useContext(FirebaseContext);\n\n    useEffect(() => {\n        if(id && consultarDB) {\n            const obtenerProducto = async () => {\n                const productoQuery = await firebase.db.collection('productos').doc(id);\n                const producto = await productoQuery.get();\n                if(producto.exists) {\n                   guardarProducto( producto.data() );\n                   guardarConsultarDB(false);\n                } else {\n                    guardarError( true );\n                    guardarConsultarDB(false);\n                }\n            }\n            obtenerProducto();\n        }\n    }, [id]);\n\n    if(Object.keys(producto).length === 0 && !error)  return 'Cargando...';\n\n    const { comentarios, creado, descripcion, empresa, nombre, url, urlimagen, votos, creador, haVotado } = producto;\n\n    // Administrar y validar los votos\n    const votarProducto = () => {\n        if(!usuario) {\n            return router.push('/login')\n        }\n\n        // Verificar si el usuario actual ha votado\n        if(haVotado.includes(usuario.uid) ) return;\n        // obtener y sumar un nuevo voto\n        const nuevoTotal = votos + 1;\n\n\n        // guardar el ID del usuario que ha votado\n        const nuevoHaVotado = [...haVotado, usuario.uid];\n\n        //  Actualizar en la BD\n        firebase.db.collection('productos').doc(id).update({ \n            votos: nuevoTotal, \n            haVotado: nuevoHaVotado \n        })\n\n        // Actualizar el state\n        guardarProducto({\n            ...producto,\n            votos: nuevoTotal\n        })\n\n        guardarConsultarDB(true); // hay un voto, por lo tanto consultar a la BD\n    }\n\n    // Funciones para crear comentarios\n    const comentarioChange = e => {\n        guardarComentario({\n            ...comentario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Identifica si el comentario es del creador del producto\n    const esCreador = id => {\n        if(creador.id == id) {\n            return true;\n        }\n    }\n\n    const agregarComentario = e => {\n        e.preventDefault();\n\n        if(!usuario) {\n            return router.push('/login')\n        }\n\n        // información extra al comentario\n        comentario.usuarioId = usuario.uid;\n        comentario.usuarioNombre = usuario.displayName;\n\n        // Tomar copia de comentarios y agregarlos al arreglo\n        const nuevosComentarios = [...comentarios, comentario];\n\n        // Actualizar la BD\n        firebase.db.collection('productos').doc(id).update({\n            comentarios: nuevosComentarios\n        })\n\n        // Actualizar el state\n        guardarProducto({\n            ...producto,\n            comentarios: nuevosComentarios\n        })\n\n        guardarConsultarDB(true); // hay un COMENTARIO, por lo tanto consultar a la BD\n    }\n\n    // función que revisa que el creador del producto sea el mismo que esta autenticado\n    const puedeBorrar = () => {\n        if(!usuario) return false;\n\n        if(creador.id === usuario.uid) {\n            return true\n        }\n    }\n\n    // elimina un producto de la bd\n    const eliminarProducto = async () => {\n\n        if(!usuario) {\n            return router.push('/login')\n        }\n\n        if(creador.id !== usuario.uid) {\n            return router.push('/')\n        }\n\n        try {\n            await firebase.db.collection('productos').doc(id).delete();\n            router.push('/')\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return ( \n        <Layout>\n            <>\n                { error ? <Error404 /> : (\n                    <div className=\"contenedor\">\n                        <h1 css={css`\n                            text-align: center;\n                            margin-top: 5rem;\n                        `}>{nombre} </h1>\n\n                        <ContenedorProducto>\n                            <div>\n                                <p>Publicado hace: { formatDistanceToNow( new Date(creado), {locale: es} )} </p>\n                                <p>Por: {creador.nombre} de {empresa} </p>\n                                <img src={urlimagen} />\n                                <p>{descripcion}</p>\n\n                                { usuario && (\n                                    <>\n                                    <h2>Agrega tu comentario</h2>\n                                    <form\n                                        onSubmit={agregarComentario}\n                                    >\n                                        <Campo>\n                                            <input\n                                                type=\"text\"\n                                                name=\"mensaje\"\n                                                onChange={comentarioChange}\n                                            />\n                                        </Campo>\n                                        <InputSubmit\n                                            type=\"submit\"\n                                            value=\"Agregar Comentario\"\n                                        />\n                                    </form>\n                                    </>\n                                ) }\n\n                                <h2 css={css`\n                                    margin: 2rem 0;\n                                `}>Comentarios</h2>\n\n                                {comentarios.length === 0 ? \"Aún no hay comentarios\" : (\n                                    <ul>\n                                        {comentarios.map((comentario, i) => (\n                                            <li \n                                                key={`${comentario.usuarioId}-${i}`}\n                                                css={css`\n                                                    border: 1px solid #e1e1e1;\n                                                    padding: 2rem;\n                                                `}\n                                            >\n                                                <p>{comentario.mensaje}</p>\n                                                <p>Escrito por: \n                                                    <span\n                                                        css={css`\n                                                            font-weight:bold;\n                                                        `}\n                                                    >\n                                                    {''} {comentario.usuarioNombre}\n                                                    </span>\n                                                </p>\n                                                { esCreador( comentario.usuarioId ) && <CreadorProducto>Es Creador</CreadorProducto> }\n                                            </li>\n                                        ))}\n                                    </ul>\n                                )}\n                                \n                            </div>\n\n                            <aside>\n                                <Boton\n                                    target=\"_blank\"\n                                    bgColor=\"true\"\n                                    href={url}\n                                >Visitar URL</Boton>\n\n                            \n\n                                <div\n                                    css={css`\n                                        margin-top: 5rem;\n                                    `}\n                                >\n                                    <p css={css`\n                                        text-align: center;\n                                    `}>{votos} Votos</p>\n\n                                    { usuario && (\n                                        <Boton\n                                            onClick={votarProducto}\n                                        >\n                                            Votar\n                                        </Boton>\n                                    ) }\n                                </div>\n                            </aside>\n                        </ContenedorProducto>\n\n                        { puedeBorrar() && \n                            <Boton\n                                onClick={eliminarProducto}\n                            >Eliminar Producto</Boton>\n                        }\n                    </div>\n                ) }\n\n                \n            </>\n        </Layout>\n      );\n}\n \nexport default Producto;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AAEA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAOA;AATA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AAEA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AADA;AACA;AAIA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAYA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAilBA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}